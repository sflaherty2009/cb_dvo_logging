driver:
  name: vagrant

provisioner:
  name: chef_zero

verifier:
  name: inspec

# To make Windows work, need to install vagrant windows plugin, first
# vagrant plugin install vagrant-winrm
# See: https://github.com/criteo/vagrant-winrm

# Make sure VPN is turned on before running azure kitchen or SSH connection will fail.
platforms:
  - name: centos-7.4-azure
    transport:
      ssh_key: ~/.ssh/id_rsa
    driver:
      name: azurerm
    attributes:
      dvo:
        cloud_service_provider:
          name: 'azure'
    driver_config:
      subscription_id: '9fbf7025-df40-4908-b7fb-a3a2144cee91'
      location: East US 2
      machine_size: Standard_D1
      image_urn: OpenLogic:CentOS:7.4:latest
      data_disks:
        - lun: 0
          disk_size_gb: 979
        - lun: 1
          disk_size_gb: 50
      # vnet and subnet id will work in web technology prod only. Disable otherwise.
      vnet_id: /subscriptions/9fbf7025-df40-4908-b7fb-a3a2144cee91/resourceGroups/AZ-RG-Network/providers/Microsoft.Network/virtualNetworks/AZ-VN-EastUS2-02
      subnet_id: AZ-SN-dvo
      vm_name: azl-tst-kitchen
      vm_tags:
        ostype: linux
        distro: cento

  - name: Windows2012R2-local
    os_type: windows
    shell_type: powershell
    communicator: winrm
    transport:
      name: winrm
      username: vagrant
      password: vagrant
    driver:
      box: trek/windows2012r2
      box_url: https://aztrksaslh00public01.blob.core.windows.net/vagrant/windows/2012r2/windows2012r2min-virtualbox.box
      customize:
        createhd:
          - filename: disk1.vdi
            size: 1002496
          - filename: disk2.vdi
            size: 51200
        storageattach:
          - storagectl: IDE Controller
            port: 1
            device: 0
            type: hdd
            medium: disk1.vdi
          - storagectl: IDE Controller
            port: 1
            device: 1
            type: hdd
            medium: disk2.vdi
      memory: 2048
      cpus: 1
      network:
        - ['private_network', {ip: '192.168.57.12'}]
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        ALM_environment: "local"
      dvo:
        cloud_service_provider:
          name: "local"

  - name: Windows2016-local
    os_type: windows
    shell_type: powershell
    communicator: winrm
    transport:
      name: winrm
      username: vagrant
      password: vagrant
    driver:
      box: trek/Windows2016
      box_url: https://aztrksaslh00public01.blob.core.windows.net/vagrant/windows/2016/windows2016min-virtualbox.box
      customize:
        createhd:
          - filename: disk1.vdi
            size: 1002496
          - filename: disk2.vdi
            size: 51200
        storageattach:
          - storagectl: IDE Controller
            port: 1
            device: 0
            type: hdd
            medium: disk1.vdi
          - storagectl: IDE Controller
            port: 1
            device: 1
            type: hdd
            medium: disk2.vdi
      memory: 2048
      cpus: 2
      network:
        - ['private_network', {ip: '192.168.57.11'}]
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        ALM_environment: "local"
      dvo:
        cloud_service_provider:
          name: "local"

  - name: centos-7.4-local
    transport:
      name: ssh
      username: vagrant
      password: vagrant
    driver:
      box: bento/centos-7.4
      customize:
        createhd:
          - filename: disk1.vdi
            size: 1002496
          - filename: disk2.vdi
            size: 51200
        storageattach:
          - storagectl: SATA Controller
            port: 1
            device: 0
            type: hdd
            medium: disk1.vdi
          - storagectl: SATA Controller
            port: 2
            device: 0
            type: hdd
            medium: disk2.vdi
      memory: 1024
      cpus: 1
      network:
        - ['private_network', {ip: '192.168.56.14'}]
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        ALM_environment: "local"
      dvo:
        cloud_service_provider:
          name: "local"

suites:
  - name: default
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/default
    attributes:
      dvo_user:
        cloud:
        provider: 'local'
        use: "hybris hybrisFrontEndWebServer hybrisBackEndWebServer solr linux docker"
        ALM_service: "solr"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.15'}]
  - name: hybrisWebServer
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/hybrisWebServer
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        use: "hybrisFrontEndWebServer hybrisBackEndWebServer"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.16'}]
  - name: hybris
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/hybris
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        use: "hybris"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.17'}]
  - name: solr
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/solr
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        use: "solr"
        ALM_service: "solr"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.18'}]
  - name: vertex
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/vertex
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        use: "vertex_app"
        vertex:
          storage_class: "standard"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.18'}]
  - name: linux
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/linux
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        use: "linux"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.19'}]
  - name: PD
    run_list:
      - recipe[cb_dvo_logging::default]
    verifier:
      inspec_tests:
        - test/smoke/translations
    attributes:
      cloud:
        provider: 'local'
      dvo_user:
        use: "translations PD linux"
        translations:
          pd:
            storage_class: "standard"
    driver:
      network:
        - ['private_network', {ip: '192.168.56.20'}]
