resource "azurerm_network_interface" "lin_delivery" {
  name                = "${var.lin_vm_name}-${format("%02d", count.index+1)}-nic"
  location            = "${azurerm_resource_group.delivery.location}"
  resource_group_name = "${azurerm_resource_group.delivery.name}"
  count               = "${var.count_vms}"

  ip_configuration {
    name                          = "${var.lin_vm_name}-${format("%02d", count.index+1)}-ipconf"
    subnet_id                     = "${var.subnet_id}"
    private_ip_address_allocation = "dynamic"
  }
}

resource "azurerm_storage_account" "lin_delivery" {
  name                     = "${replace(var.lin_vm_name, "-", "")}${substr(lower(replace(replace(var.cookbook_name, "_", ""), "-", "")), -10, -1)}${format("%02d", count.index+1)}s"
  resource_group_name      = "${azurerm_resource_group.delivery.name}"
  location                 = "${azurerm_resource_group.delivery.location}"
  account_tier             = "Standard"
  account_replication_type = "LRS"
  count                    = "${var.count_vms}"
}

resource "azurerm_storage_container" "lin_delivery" {
  name                  = "vhds"
  resource_group_name   = "${azurerm_resource_group.delivery.name}"
  storage_account_name  = "${element(azurerm_storage_account.lin_delivery.*.name, count.index)}"
  container_access_type = "private"
  count                 = "${var.count_vms}"
}

resource "azurerm_virtual_machine" "lin_delivery" {
  name                  = "${var.lin_vm_name}-${format("%02d", count.index+1)}"
  location              = "${azurerm_resource_group.delivery.location}"
  resource_group_name   = "${azurerm_resource_group.delivery.name}"
  network_interface_ids = ["${element(azurerm_network_interface.lin_delivery.*.id, count.index)}"]
  vm_size               = "${var.lin_vm_size}"
  count                 = "${var.count_vms}"

  delete_os_disk_on_termination    = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "${var.lin_image_publisher}"
    offer     = "${var.lin_image_offer}"
    sku       = "${var.lin_image_sku}"
    version   = "${var.lin_image_version}"
  }

  storage_os_disk {
    name          = "osdisk"
    vhd_uri       = "${element(azurerm_storage_account.lin_delivery.*.primary_blob_endpoint, count.index)}${element(azurerm_storage_container.lin_delivery.*.name, count.index)}/osdisk.vhd"
    caching       = "ReadWrite"
    create_option = "FromImage"
  }

  storage_data_disk {
    name          = "datadisk-0"
    vhd_uri       = "${element(azurerm_storage_account.lin_delivery.*.primary_blob_endpoint, count.index)}${element(azurerm_storage_container.lin_delivery.*.name, count.index)}/datadisk-0.vhd"
    disk_size_gb  = "79"
    create_option = "Empty"
    lun           = 0
  }

  os_profile {
    computer_name  = "${var.lin_vm_name}-${format("%02d", count.index+1)}"
    admin_username = "${var.admin_user}"
    admin_password = "${var.admin_password}"
  }

  os_profile_linux_config {
    disable_password_authentication = "false"
  }

  provisioner "remote-exec" {
    inline = [
      "echo ${var.admin_password} | sudo -S sudo su -c 'echo 10.16.192.7 azl-chef-srvr-01 >> /etc/hosts'",
      "echo ${var.admin_password} | sudo -S sudo su -c 'echo 10.16.192.8 azl-chef-auto-01 >> /etc/hosts'"
    ]

    connection {
      type             = "ssh"
      host             = "${element(azurerm_network_interface.lin_delivery.*.private_ip_address, count.index)}"
      user             = "${var.admin_user}"
      password         = "${var.admin_password}"
      agent            = false
    }
  }

  provisioner "local-exec" {
    command = "knife bootstrap ${element(azurerm_network_interface.lin_delivery.*.private_ip_address, count.index)} -N ${var.lin_vm_name}-${format("%02d", count.index+1)}-${var.cookbook_name} --environment acceptance-trek-trek-bikes-${var.cookbook_name}-master -x ${var.admin_user} -P ${var.admin_password} --run-list '${var.base_run_list}recipe[${var.cookbook_name}]' --sudo --yes"
  }

  provisioner "local-exec" {
    when    = "destroy"
    command = "knife node bulk delete \"${var.lin_vm_name}-${format("%02d", count.index+1)}-${var.cookbook_name}\" -y; knife client bulk delete \"${var.lin_vm_name}-${format("%02d", count.index+1)}-${var.cookbook_name}\" -y;"
  }

  provisioner "remote-exec" {
    when    = "destroy"
    inline = [
      "/bin/bash -c \"while read -r line ; do echo \\\"Deleting node \\$line\\\"; sudo automate-ctl delete-node -u \\$line -f; done < <(sudo automate-ctl node-summary | awk '/${var.lin_vm_name}-${format("%02d", count.index+1)}-${var.cookbook_name}/ {print \\$2}');\""
    ]

    connection {
      type             = "ssh"
      host             = "10.16.192.8"
      user             = "${var.admin_user}"
      password         = "${var.admin_password}"
      agent            = false
    }
  }

  tags {
    environment = "Chef Automate"
  }
}
